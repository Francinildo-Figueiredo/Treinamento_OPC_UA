/******************************************************************************
**
** <auto-generated>
**     This code was generated by a tool: UaModeler
**     Runtime Version: 1.6.9, using .NET Server 3.3.0 template (version 0)
**
**     Changes to this file may cause incorrect behavior and will be lost if
**     the code is regenerated.
** </auto-generated>
**
** Copyright (c) 2006-2024 Unified Automation GmbH All rights reserved.
**
** Software License Agreement ("SLA") Version 2.8
**
** Unless explicitly acquired and licensed from Licensor under another
** license, the contents of this file are subject to the Software License
** Agreement ("SLA") Version 2.8, or subsequent versions
** as allowed by the SLA, and You may not copy or use this file in either
** source code or executable form, except in compliance with the terms and
** conditions of the SLA.
**
** All software distributed under the SLA is provided strictly on an
** "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
** AND LICENSOR HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT
** LIMITATION, ANY WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
** PURPOSE, QUIET ENJOYMENT, OR NON-INFRINGEMENT. See the SLA for specific
** language governing rights and limitations under the SLA.
**
** Project: .NET OPC UA SDK information model for namespace http://yourorganisation.org/ModeloEvaporador/
**
** Description: OPC Unified Architecture Software Development Kit.
**
** The complete license agreement can be found here:
** http://unifiedautomation.com/License/SLA/2.8/
**
** Created: 26.06.2024
**
******************************************************************************/

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Xml;
using UnifiedAutomation.UaBase;
using UnifiedAutomation.UaServer;

namespace UFCG.ModeloEvaporadorNS
{
    #region PlantaEvaporador
    /// <summary>
    /// </summary>
    [UaTypeDefinition(NodeId=ObjectTypes.PlantaEvaporador, NamespaceUri=UFCG.ModeloEvaporadorNS.Namespaces.ModeloEvaporadorNS)]
    public partial class PlantaEvaporador : BaseObjectModel
    {
        #region Constructors
        /// <summary>
        /// Initializes a new instance of the <see cref="PlantaEvaporador" /> class.
        /// </summary>
        public PlantaEvaporador() : this((PlantaEvaporador)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="PlantaEvaporador" /> class.
        /// </summary>
        /// <param name="template">The template.</param>
        /// <param name="dummy">Dummy argument to enable writing own constructors that are called by the generated code.</param>
        public PlantaEvaporador(PlantaEvaporador template, DummyArgument dummy = null) : base(template)
        {
            if (template == null)
            {
                T1paraT2 = new T1paraT2();
                T1paraT3 = new T1paraT3();
                T2paraCX = new T2paraCX();
                T3paraCX = new T3paraCX();
                Tanque001 = new Tanque001();
                Tanque002 = new Tanque002();
                Tanque003 = new Tanque003();
            }
            else
            {
                T1paraT2 = new T1paraT2(template.T1paraT2);
                T1paraT3 = new T1paraT3(template.T1paraT3);
                T2paraCX = new T2paraCX(template.T2paraCX);
                T3paraCX = new T3paraCX(template.T3paraCX);
                Tanque001 = new Tanque001(template.Tanque001);
                Tanque002 = new Tanque002(template.Tanque002);
                Tanque003 = new Tanque003(template.Tanque003);
            }
        }
        #endregion

        #region Public Properties
        /// <summary>
        /// Gets or sets the T1paraT2
        /// </summary>
        [UaInstanceDeclaration(NamespaceUri = Namespaces.ModeloEvaporadorNS)]
        public T1paraT2 T1paraT2 { get; set; }

        /// <summary>
        /// Gets or sets the T1paraT3
        /// </summary>
        [UaInstanceDeclaration(NamespaceUri = Namespaces.ModeloEvaporadorNS)]
        public T1paraT3 T1paraT3 { get; set; }

        /// <summary>
        /// Gets or sets the T2paraCX
        /// </summary>
        [UaInstanceDeclaration(NamespaceUri = Namespaces.ModeloEvaporadorNS)]
        public T2paraCX T2paraCX { get; set; }

        /// <summary>
        /// Gets or sets the T3paraCX
        /// </summary>
        [UaInstanceDeclaration(NamespaceUri = Namespaces.ModeloEvaporadorNS)]
        public T3paraCX T3paraCX { get; set; }

        /// <summary>
        /// Gets or sets the Tanque001
        /// </summary>
        [UaInstanceDeclaration(NamespaceUri = Namespaces.ModeloEvaporadorNS)]
        public Tanque001 Tanque001 { get; set; }

        /// <summary>
        /// Gets or sets the Tanque002
        /// </summary>
        [UaInstanceDeclaration(NamespaceUri = Namespaces.ModeloEvaporadorNS)]
        public Tanque002 Tanque002 { get; set; }

        /// <summary>
        /// Gets or sets the Tanque003
        /// </summary>
        [UaInstanceDeclaration(NamespaceUri = Namespaces.ModeloEvaporadorNS)]
        public Tanque003 Tanque003 { get; set; }


        #endregion
    }
    #endregion


    #region T1paraT2
    /// <summary>
    /// </summary>
    [UaTypeDefinition(NodeId=ObjectTypes.T1paraT2, NamespaceUri=UFCG.ModeloEvaporadorNS.Namespaces.ModeloEvaporadorNS)]
    public partial class T1paraT2 : BaseObjectModel
    {
        #region Constructors
        /// <summary>
        /// Initializes a new instance of the <see cref="T1paraT2" /> class.
        /// </summary>
        public T1paraT2() : this((T1paraT2)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="T1paraT2" /> class.
        /// </summary>
        /// <param name="template">The template.</param>
        /// <param name="dummy">Dummy argument to enable writing own constructors that are called by the generated code.</param>
        public T1paraT2(T1paraT2 template, DummyArgument dummy = null) : base(template)
        {
            if (template == null)
            {
            }
            else
            {
                SC_001 = template.SC_001;
            }
        }
        #endregion

        #region Public Properties
        /// <summary>
        /// Gets or sets the SC_001
        /// </summary>
        [UaInstanceDeclaration(NamespaceUri = Namespaces.ModeloEvaporadorNS, BrowseName="SC-001")]
        public double SC_001
        {
            get => m_SC_001;
            set => SetField(ref m_SC_001, value, nameof(SC_001));
        }
        private double m_SC_001;


        #endregion
    }
    #endregion


    #region T1paraT3
    /// <summary>
    /// </summary>
    [UaTypeDefinition(NodeId=ObjectTypes.T1paraT3, NamespaceUri=UFCG.ModeloEvaporadorNS.Namespaces.ModeloEvaporadorNS)]
    public partial class T1paraT3 : BaseObjectModel
    {
        #region Constructors
        /// <summary>
        /// Initializes a new instance of the <see cref="T1paraT3" /> class.
        /// </summary>
        public T1paraT3() : this((T1paraT3)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="T1paraT3" /> class.
        /// </summary>
        /// <param name="template">The template.</param>
        /// <param name="dummy">Dummy argument to enable writing own constructors that are called by the generated code.</param>
        public T1paraT3(T1paraT3 template, DummyArgument dummy = null) : base(template)
        {
            if (template == null)
            {
            }
            else
            {
                SC_003 = template.SC_003;
            }
        }
        #endregion

        #region Public Properties
        /// <summary>
        /// Gets or sets the SC_003
        /// </summary>
        [UaInstanceDeclaration(NamespaceUri = Namespaces.ModeloEvaporadorNS, BrowseName="SC-003")]
        public double SC_003
        {
            get => m_SC_003;
            set => SetField(ref m_SC_003, value, nameof(SC_003));
        }
        private double m_SC_003;


        #endregion
    }
    #endregion


    #region T2paraCX
    /// <summary>
    /// </summary>
    [UaTypeDefinition(NodeId=ObjectTypes.T2paraCX, NamespaceUri=UFCG.ModeloEvaporadorNS.Namespaces.ModeloEvaporadorNS)]
    public partial class T2paraCX : BaseObjectModel
    {
        #region Constructors
        /// <summary>
        /// Initializes a new instance of the <see cref="T2paraCX" /> class.
        /// </summary>
        public T2paraCX() : this((T2paraCX)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="T2paraCX" /> class.
        /// </summary>
        /// <param name="template">The template.</param>
        /// <param name="dummy">Dummy argument to enable writing own constructors that are called by the generated code.</param>
        public T2paraCX(T2paraCX template, DummyArgument dummy = null) : base(template)
        {
            if (template == null)
            {
            }
            else
            {
                FV_002 = template.FV_002;
            }
        }
        #endregion

        #region Public Properties
        /// <summary>
        /// Gets or sets the FV_002
        /// </summary>
        [UaInstanceDeclaration(NamespaceUri = Namespaces.ModeloEvaporadorNS, BrowseName="FV-002")]
        public double FV_002
        {
            get => m_FV_002;
            set => SetField(ref m_FV_002, value, nameof(FV_002));
        }
        private double m_FV_002;


        #endregion
    }
    #endregion


    #region T3paraCX
    /// <summary>
    /// </summary>
    [UaTypeDefinition(NodeId=ObjectTypes.T3paraCX, NamespaceUri=UFCG.ModeloEvaporadorNS.Namespaces.ModeloEvaporadorNS)]
    public partial class T3paraCX : BaseObjectModel
    {
        #region Constructors
        /// <summary>
        /// Initializes a new instance of the <see cref="T3paraCX" /> class.
        /// </summary>
        public T3paraCX() : this((T3paraCX)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="T3paraCX" /> class.
        /// </summary>
        /// <param name="template">The template.</param>
        /// <param name="dummy">Dummy argument to enable writing own constructors that are called by the generated code.</param>
        public T3paraCX(T3paraCX template, DummyArgument dummy = null) : base(template)
        {
            if (template == null)
            {
            }
            else
            {
                FV_001 = template.FV_001;
                SC_002 = template.SC_002;
                TT_002 = template.TT_002;
            }
        }
        #endregion

        #region Public Properties
        /// <summary>
        /// Gets or sets the FV_001
        /// </summary>
        [UaInstanceDeclaration(NamespaceUri = Namespaces.ModeloEvaporadorNS, BrowseName="FV-001")]
        public double FV_001
        {
            get => m_FV_001;
            set => SetField(ref m_FV_001, value, nameof(FV_001));
        }
        private double m_FV_001;

        /// <summary>
        /// Gets or sets the SC_002
        /// </summary>
        [UaInstanceDeclaration(NamespaceUri = Namespaces.ModeloEvaporadorNS, BrowseName="SC-002")]
        public double SC_002
        {
            get => m_SC_002;
            set => SetField(ref m_SC_002, value, nameof(SC_002));
        }
        private double m_SC_002;

        /// <summary>
        /// Gets or sets the TT_002
        /// </summary>
        [UaInstanceDeclaration(NamespaceUri = Namespaces.ModeloEvaporadorNS, BrowseName="TT-002")]
        public double TT_002
        {
            get => m_TT_002;
            set => SetField(ref m_TT_002, value, nameof(TT_002));
        }
        private double m_TT_002;


        #endregion
    }
    #endregion


    #region Tanque001
    /// <summary>
    /// </summary>
    [UaTypeDefinition(NodeId=ObjectTypes.Tanque001, NamespaceUri=UFCG.ModeloEvaporadorNS.Namespaces.ModeloEvaporadorNS)]
    public partial class Tanque001 : BaseObjectModel
    {
        #region Constructors
        /// <summary>
        /// Initializes a new instance of the <see cref="Tanque001" /> class.
        /// </summary>
        public Tanque001() : this((Tanque001)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="Tanque001" /> class.
        /// </summary>
        /// <param name="template">The template.</param>
        /// <param name="dummy">Dummy argument to enable writing own constructors that are called by the generated code.</param>
        public Tanque001(Tanque001 template, DummyArgument dummy = null) : base(template)
        {
            if (template == null)
            {
            }
            else
            {
                TT_003 = template.TT_003;
            }
        }
        #endregion

        #region Public Properties
        /// <summary>
        /// Gets or sets the TT_003
        /// </summary>
        [UaInstanceDeclaration(NamespaceUri = Namespaces.ModeloEvaporadorNS, BrowseName="TT-003")]
        public double TT_003
        {
            get => m_TT_003;
            set => SetField(ref m_TT_003, value, nameof(TT_003));
        }
        private double m_TT_003;


        #endregion
    }
    #endregion


    #region Tanque002
    /// <summary>
    /// </summary>
    [UaTypeDefinition(NodeId=ObjectTypes.Tanque002, NamespaceUri=UFCG.ModeloEvaporadorNS.Namespaces.ModeloEvaporadorNS)]
    public partial class Tanque002 : BaseObjectModel
    {
        #region Constructors
        /// <summary>
        /// Initializes a new instance of the <see cref="Tanque002" /> class.
        /// </summary>
        public Tanque002() : this((Tanque002)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="Tanque002" /> class.
        /// </summary>
        /// <param name="template">The template.</param>
        /// <param name="dummy">Dummy argument to enable writing own constructors that are called by the generated code.</param>
        public Tanque002(Tanque002 template, DummyArgument dummy = null) : base(template)
        {
            if (template == null)
            {
            }
            else
            {
                TT_001 = template.TT_001;
                TV_001 = template.TV_001;
            }
        }
        #endregion

        #region Public Properties
        /// <summary>
        /// Gets or sets the TT_001
        /// </summary>
        [UaInstanceDeclaration(NamespaceUri = Namespaces.ModeloEvaporadorNS, BrowseName="TT-001")]
        public double TT_001
        {
            get => m_TT_001;
            set => SetField(ref m_TT_001, value, nameof(TT_001));
        }
        private double m_TT_001;

        /// <summary>
        /// Gets or sets the TV_001
        /// </summary>
        [UaInstanceDeclaration(NamespaceUri = Namespaces.ModeloEvaporadorNS, BrowseName="TV-001")]
        public double TV_001
        {
            get => m_TV_001;
            set => SetField(ref m_TV_001, value, nameof(TV_001));
        }
        private double m_TV_001;


        #endregion
    }
    #endregion


    #region Tanque003
    /// <summary>
    /// </summary>
    [UaTypeDefinition(NodeId=ObjectTypes.Tanque003, NamespaceUri=UFCG.ModeloEvaporadorNS.Namespaces.ModeloEvaporadorNS)]
    public partial class Tanque003 : BaseObjectModel
    {
        #region Constructors
        /// <summary>
        /// Initializes a new instance of the <see cref="Tanque003" /> class.
        /// </summary>
        public Tanque003() : this((Tanque003)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="Tanque003" /> class.
        /// </summary>
        /// <param name="template">The template.</param>
        /// <param name="dummy">Dummy argument to enable writing own constructors that are called by the generated code.</param>
        public Tanque003(Tanque003 template, DummyArgument dummy = null) : base(template)
        {
            if (template == null)
            {
            }
            else
            {
                LT_001 = template.LT_001;
                PT_001 = template.PT_001;
            }
        }
        #endregion

        #region Public Properties
        /// <summary>
        /// Gets or sets the LT_001
        /// </summary>
        [UaInstanceDeclaration(NamespaceUri = Namespaces.ModeloEvaporadorNS, BrowseName="LT-001")]
        public double LT_001
        {
            get => m_LT_001;
            set => SetField(ref m_LT_001, value, nameof(LT_001));
        }
        private double m_LT_001;

        /// <summary>
        /// Gets or sets the PT_001
        /// </summary>
        [UaInstanceDeclaration(NamespaceUri = Namespaces.ModeloEvaporadorNS, BrowseName="PT-001")]
        public double PT_001
        {
            get => m_PT_001;
            set => SetField(ref m_PT_001, value, nameof(PT_001));
        }
        private double m_PT_001;


        #endregion
    }
    #endregion



}
